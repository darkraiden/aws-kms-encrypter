version: 2
jobs:
    dependencies:
        docker:
            - image: circleci/golang:1.12.5
        environment:
            GO111MODULE: 'on'
        working_directory: /go/src/github.com/darkraiden/aws-kms-encrypter
        steps:
            - checkout
            - run:
                  name: fetch dependencies
                  command: |
                      go mod vendor
            - persist_to_workspace:
                  root: /go/src/github.com/darkraiden/aws-kms-encrypter
                  paths:
                      - vendor
    test:
        docker:
            - image: circleci/golang:1.12.5
        environment:
            GO111MODULE: 'on'
        working_directory: /go/src/github.com/darkraiden/aws-kms-encrypter
        steps:
            - checkout
            - attach_workspace:
                  at: /go/src/github.com/darkraiden/aws-kms-encrypter
            - run:
                  name: run tests
                  command: |
                      go test ./...
    build:
        docker:
            - image: circleci/golang:1.12.5
        environment:
            GO111MODULE: 'on'
        working_directory: /go/src/github.com/darkraiden/aws-kms-encrypter
        steps:
            - checkout
            - attach_workspace:
                  at: /go/src/github.com/darkraiden/aws-kms-encrypter
            - run:
                  name: get gox
                  command: go get github.com/mitchellh/gox
            - run:
                  name: run build
                  command: |
                      gox -os="linux darwin windows" -arch="amd64" -output="dist/spotifycli_{{.OS}}_{{.Arch}}"
                      cd dist/ && gzip *
            - persist_to_workspace:
                  root: /go/src/github.com/darkraiden/aws-kms-encrypter
                  paths:
                      - dist
    deploy:
        docker:
            - image: circleci/golang:1.12.5
        working_directory: /go/src/github.com/darkraiden/aws-kms-encrypter
        steps:
            - attach_workspace:
                  at: /go/src/github.com/darkraiden/aws-kms-encrypter
            - add_ssh_keys
            - run:
                  name: get ghr
                  command: ls -la vendor && go get -u github.com/tcnksm/ghr
            - run:
                  name: create release
                  command: |
                      tag=$(semantics --output-tag)
                      if [ "$tag" ]; then
                        ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $tag dist/
                      else
                        echo "The commit message(s) did not indicate a major/minor/patch version."
                      fi
workflows:
    version: 2
    test-build-deploy:
        jobs:
            - dependencies
            - test:
                  requires:
                      - dependencies
            - build:
                  requires:
                      - test
            - deploy:
                  requires:
                      - build
                  filters:
                      branches:
                          only: master
